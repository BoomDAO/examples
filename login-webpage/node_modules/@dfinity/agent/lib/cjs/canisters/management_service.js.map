{"version":3,"file":"management_service.js","sourceRoot":"","sources":["../../../src/canisters/management_service.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * This file is generated from the candid for asset management.\n */\n/* tslint:disable */\n// @ts-ignore\nimport type { Principal } from '@dfinity/principal';\nexport type canister_id = Principal;\nexport interface canister_settings {\n  controllers: [] | [Array<Principal>];\n  freezing_threshold: [] | [bigint];\n  memory_allocation: [] | [bigint];\n  compute_allocation: [] | [bigint];\n}\nexport interface definite_canister_settings {\n  controllers: Array<Principal>;\n  freezing_threshold: bigint;\n  memory_allocation: bigint;\n  compute_allocation: bigint;\n}\nexport type user_id = Principal;\nexport type wasm_module = Array<number>;\nexport default interface _SERVICE {\n  canister_status: (arg_0: { canister_id: canister_id }) => Promise<{\n    status: { stopped: null } | { stopping: null } | { running: null };\n    memory_size: bigint;\n    cycles: bigint;\n    settings: definite_canister_settings;\n    module_hash: [] | [Array<number>];\n  }>;\n  create_canister: (arg_0: {\n    settings: [] | [canister_settings];\n  }) => Promise<{ canister_id: canister_id }>;\n  delete_canister: (arg_0: { canister_id: canister_id }) => Promise<undefined>;\n  deposit_cycles: (arg_0: { canister_id: canister_id }) => Promise<undefined>;\n  install_code: (arg_0: {\n    arg: Array<number>;\n    wasm_module: wasm_module;\n    mode: { reinstall: null } | { upgrade: null } | { install: null };\n    canister_id: canister_id;\n  }) => Promise<undefined>;\n  provisional_create_canister_with_cycles: (arg_0: {\n    settings: [] | [canister_settings];\n    amount: [] | [bigint];\n  }) => Promise<{ canister_id: canister_id }>;\n  provisional_top_up_canister: (arg_0: {\n    canister_id: canister_id;\n    amount: bigint;\n  }) => Promise<undefined>;\n  raw_rand: () => Promise<Array<number>>;\n  start_canister: (arg_0: { canister_id: canister_id }) => Promise<undefined>;\n  stop_canister: (arg_0: { canister_id: canister_id }) => Promise<undefined>;\n  uninstall_code: (arg_0: { canister_id: canister_id }) => Promise<undefined>;\n  update_settings: (arg_0: {\n    canister_id: Principal;\n    settings: canister_settings;\n  }) => Promise<undefined>;\n}\n"]}