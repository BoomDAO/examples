{"version":3,"file":"candid-core.js","sourceRoot":"","sources":["../../src/candid-core.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as IDL from './idl';\n\n// tslint:disable:max-classes-per-file\n\nexport interface ParseConfig {\n  random?: boolean;\n}\n\nexport interface UIConfig {\n  input?: HTMLElement;\n  form?: InputForm;\n  parse(t: IDL.Type, config: ParseConfig, v: string): any;\n}\n\nexport interface FormConfig {\n  open?: HTMLElement;\n  event?: string;\n  labelMap?: Record<string, string>;\n  container?: HTMLElement;\n  render(t: IDL.Type): InputBox;\n}\n\nexport class InputBox {\n  public status: HTMLElement;\n  public label: string | null = null;\n  public value: any = undefined;\n\n  constructor(public idl: IDL.Type, public ui: UIConfig) {\n    const status = document.createElement('span');\n    status.className = 'status';\n    this.status = status;\n\n    if (ui.input) {\n      ui.input.addEventListener('blur', () => {\n        if ((ui.input as HTMLInputElement).value === '') {\n          return;\n        }\n        this.parse();\n      });\n      ui.input.addEventListener('input', () => {\n        status.style.display = 'none';\n        ui.input!.classList.remove('reject');\n      });\n    }\n  }\n  public isRejected(): boolean {\n    return this.value === undefined;\n  }\n\n  public parse(config: ParseConfig = {}): any {\n    if (this.ui.form) {\n      const value = this.ui.form.parse(config);\n      this.value = value;\n      return value;\n    }\n\n    if (this.ui.input) {\n      const input = this.ui.input as HTMLInputElement;\n      try {\n        const value = this.ui.parse(this.idl, config, input.value);\n        if (!this.idl.covariant(value)) {\n          throw new Error(`${input.value} is not of type ${this.idl.display()}`);\n        }\n        this.status.style.display = 'none';\n        this.value = value;\n        return value;\n      } catch (err) {\n        input.classList.add('reject');\n        this.status.style.display = 'block';\n        this.status.innerHTML = 'InputError: ' + (err as Error).message;\n        this.value = undefined;\n        return undefined;\n      }\n    }\n    return null;\n  }\n  public render(dom: HTMLElement): void {\n    const container = document.createElement('span');\n    if (this.label) {\n      const label = document.createElement('label');\n      label.innerText = this.label;\n      container.appendChild(label);\n    }\n    if (this.ui.input) {\n      container.appendChild(this.ui.input);\n      container.appendChild(this.status);\n    }\n\n    if (this.ui.form) {\n      this.ui.form.render(container);\n    }\n    dom.appendChild(container);\n  }\n}\n\nexport abstract class InputForm {\n  public form: InputBox[] = [];\n  constructor(public ui: FormConfig) {}\n\n  public abstract parse(config: ParseConfig): any;\n  public abstract generateForm(): any;\n  public renderForm(dom: HTMLElement): void {\n    if (this.ui.container) {\n      this.form.forEach(e => e.render(this.ui.container!));\n      dom.appendChild(this.ui.container);\n    } else {\n      this.form.forEach(e => e.render(dom));\n    }\n  }\n  public render(dom: HTMLElement): void {\n    if (this.ui.open && this.ui.event) {\n      dom.appendChild(this.ui.open);\n      const form = this;\n      // eslint-disable-next-line\n      form.ui.open!.addEventListener(form.ui.event!, () => {\n        // Remove old form\n        if (form.ui.container) {\n          form.ui.container.innerHTML = '';\n        } else {\n          const oldContainer = form.ui.open!.nextElementSibling;\n          if (oldContainer) {\n            oldContainer.parentNode!.removeChild(oldContainer);\n          }\n        }\n        // Render form\n        form.generateForm();\n        form.renderForm(dom);\n      });\n    } else {\n      this.generateForm();\n      this.renderForm(dom);\n    }\n  }\n}\n\nexport class RecordForm extends InputForm {\n  constructor(public fields: Array<[string, IDL.Type]>, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    this.form = this.fields.map(([key, type]) => {\n      const input = this.ui.render(type);\n      // eslint-disable-next-line\n      if (this.ui.labelMap && this.ui.labelMap.hasOwnProperty(key)) {\n        input.label = this.ui.labelMap[key] + ' ';\n      } else {\n        input.label = key + ' ';\n      }\n      return input;\n    });\n  }\n  public parse(config: ParseConfig): Record<string, any> | undefined {\n    const v: Record<string, any> = {};\n    this.fields.forEach(([key, _], i) => {\n      const value = this.form[i].parse(config);\n      v[key] = value;\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return v;\n  }\n}\n\nexport class TupleForm extends InputForm {\n  constructor(public components: IDL.Type[], public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    this.form = this.components.map(type => {\n      const input = this.ui.render(type);\n      return input;\n    });\n  }\n  public parse(config: ParseConfig): any[] | undefined {\n    const v: any[] = [];\n    this.components.forEach((_, i) => {\n      const value = this.form[i].parse(config);\n      v.push(value);\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return v;\n  }\n}\n\nexport class VariantForm extends InputForm {\n  constructor(public fields: Array<[string, IDL.Type]>, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    const index = (this.ui.open as HTMLSelectElement).selectedIndex;\n    const [_, type] = this.fields[index];\n    const variant = this.ui.render(type);\n    this.form = [variant];\n  }\n  public parse(config: ParseConfig): Record<string, any> | undefined {\n    const select = this.ui.open as HTMLSelectElement;\n    const selected = select.options[select.selectedIndex].value;\n    const value = this.form[0].parse(config);\n    if (value === undefined) {\n      return undefined;\n    }\n    const v: Record<string, any> = {};\n    v[selected] = value;\n    return v;\n  }\n}\n\nexport class OptionForm extends InputForm {\n  constructor(public ty: IDL.Type, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    if ((this.ui.open as HTMLInputElement).checked) {\n      const opt = this.ui.render(this.ty);\n      this.form = [opt];\n    } else {\n      this.form = [];\n    }\n  }\n  public parse<T>(config: ParseConfig): [T] | [] | undefined {\n    if (this.form.length === 0) {\n      return [];\n    } else {\n      const value = this.form[0].parse(config);\n      if (value === undefined) {\n        return undefined;\n      }\n      return [value];\n    }\n  }\n}\n\nexport class VecForm extends InputForm {\n  constructor(public ty: IDL.Type, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    const len = +(this.ui.open as HTMLInputElement).value;\n    this.form = [];\n    for (let i = 0; i < len; i++) {\n      const t = this.ui.render(this.ty);\n      this.form.push(t);\n    }\n  }\n  public parse<T>(config: ParseConfig): T[] | undefined {\n    const value = this.form.map(input => {\n      return input.parse(config);\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return value;\n  }\n}\n"]}