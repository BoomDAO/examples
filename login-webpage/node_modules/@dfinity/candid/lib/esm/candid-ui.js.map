{"version":3,"file":"candid-ui.js","sourceRoot":"","sources":["../../src/candid-ui.ts"],"names":[],"mappings":"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","sourcesContent":["import * as IDL from './idl';\nimport { Principal } from '@dfinity/principal';\nimport * as UI from './candid-core';\n\n// tslint:disable:max-classes-per-file\ntype InputBox = UI.InputBox;\n\nconst InputConfig: UI.UIConfig = { parse: parsePrimitive };\nconst FormConfig: UI.FormConfig = { render: renderInput };\n\nexport const inputBox = (t: IDL.Type, config: Partial<UI.UIConfig>) => {\n  return new UI.InputBox(t, { ...InputConfig, ...config });\n};\nexport const recordForm = (fields: Array<[string, IDL.Type]>, config: Partial<UI.FormConfig>) => {\n  return new UI.RecordForm(fields, { ...FormConfig, ...config });\n};\nexport const tupleForm = (components: IDL.Type[], config: Partial<UI.FormConfig>) => {\n  return new UI.TupleForm(components, { ...FormConfig, ...config });\n};\nexport const variantForm = (fields: Array<[string, IDL.Type]>, config: Partial<UI.FormConfig>) => {\n  return new UI.VariantForm(fields, { ...FormConfig, ...config });\n};\nexport const optForm = (ty: IDL.Type, config: Partial<UI.FormConfig>) => {\n  return new UI.OptionForm(ty, { ...FormConfig, ...config });\n};\nexport const vecForm = (ty: IDL.Type, config: Partial<UI.FormConfig>) => {\n  return new UI.VecForm(ty, { ...FormConfig, ...config });\n};\n\nexport class Render extends IDL.Visitor<null, InputBox> {\n  public visitType<T>(t: IDL.Type<T>, d: null): InputBox {\n    const input = document.createElement('input');\n    input.classList.add('argument');\n    input.placeholder = t.display();\n    return inputBox(t, { input });\n  }\n  public visitNull(t: IDL.NullClass, d: null): InputBox {\n    return inputBox(t, {});\n  }\n  public visitRecord(t: IDL.RecordClass, fields: Array<[string, IDL.Type]>, d: null): InputBox {\n    let config = {};\n    if (fields.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = { container };\n    }\n    const form = recordForm(fields, config);\n    return inputBox(t, { form });\n  }\n  public visitTuple<T extends any[]>(\n    t: IDL.TupleClass<T>,\n    components: IDL.Type[],\n    d: null,\n  ): InputBox {\n    let config = {};\n    if (components.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = { container };\n    }\n    const form = tupleForm(components, config);\n    return inputBox(t, { form });\n  }\n  public visitVariant(t: IDL.VariantClass, fields: Array<[string, IDL.Type]>, d: null): InputBox {\n    const select = document.createElement('select');\n    for (const [key, type] of fields) {\n      const option = new Option(key);\n      select.add(option);\n    }\n    select.selectedIndex = -1;\n    select.classList.add('open');\n    const config: Partial<UI.FormConfig> = { open: select, event: 'change' };\n    const form = variantForm(fields, config);\n    return inputBox(t, { form });\n  }\n  public visitOpt<T>(t: IDL.OptClass<T>, ty: IDL.Type<T>, d: null): InputBox {\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('open');\n    const form = optForm(ty, { open: checkbox, event: 'change' });\n    return inputBox(t, { form });\n  }\n  public visitVec<T>(t: IDL.VecClass<T>, ty: IDL.Type<T>, d: null): InputBox {\n    const len = document.createElement('input');\n    len.type = 'number';\n    len.min = '0';\n    len.max = '100';\n    len.style.width = '8rem';\n    len.placeholder = 'len';\n    len.classList.add('open');\n    const container = document.createElement('div');\n    container.classList.add('popup-form');\n    const form = vecForm(ty, { open: len, event: 'change', container });\n    return inputBox(t, { form });\n  }\n  public visitRec<T>(t: IDL.RecClass<T>, ty: IDL.ConstructType<T>, d: null): InputBox {\n    return renderInput(ty);\n  }\n}\n\nclass Parse extends IDL.Visitor<string, any> {\n  public visitNull(t: IDL.NullClass, v: string): null {\n    return null;\n  }\n  public visitBool(t: IDL.BoolClass, v: string): boolean {\n    if (v === 'true') {\n      return true;\n    }\n    if (v === 'false') {\n      return false;\n    }\n    throw new Error(`Cannot parse ${v} as boolean`);\n  }\n  public visitText(t: IDL.TextClass, v: string): string {\n    return v;\n  }\n  public visitFloat(t: IDL.FloatClass, v: string): number {\n    return parseFloat(v);\n  }\n  public visitFixedInt(t: IDL.FixedIntClass, v: string): number | bigint {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitFixedNat(t: IDL.FixedNatClass, v: string): number | bigint {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitNumber(t: IDL.PrimitiveType, v: string): bigint {\n    return BigInt(v);\n  }\n  public visitPrincipal(t: IDL.PrincipalClass, v: string): Principal {\n    return Principal.fromText(v);\n  }\n  public visitService(t: IDL.ServiceClass, v: string): Principal {\n    return Principal.fromText(v);\n  }\n  public visitFunc(t: IDL.FuncClass, v: string): [Principal, string] {\n    const x = v.split('.', 2);\n    return [Principal.fromText(x[0]), x[1]];\n  }\n}\n\nclass Random extends IDL.Visitor<string, any> {\n  public visitNull(t: IDL.NullClass, v: string): null {\n    return null;\n  }\n  public visitBool(t: IDL.BoolClass, v: string): boolean {\n    return Math.random() < 0.5;\n  }\n  public visitText(t: IDL.TextClass, v: string): string {\n    return Math.random().toString(36).substring(6);\n  }\n  public visitFloat(t: IDL.FloatClass, v: string): number {\n    return Math.random();\n  }\n  public visitInt(t: IDL.IntClass, v: string): bigint {\n    return BigInt(this.generateNumber(true));\n  }\n  public visitNat(t: IDL.NatClass, v: string): bigint {\n    return BigInt(this.generateNumber(false));\n  }\n  public visitFixedInt(t: IDL.FixedIntClass, v: string): number | bigint {\n    const x = this.generateNumber(true);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitFixedNat(t: IDL.FixedNatClass, v: string): number | bigint {\n    const x = this.generateNumber(false);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  private generateNumber(signed: boolean): number {\n    const num = Math.floor(Math.random() * 100);\n    if (signed && Math.random() < 0.5) {\n      return -num;\n    } else {\n      return num;\n    }\n  }\n}\n\nfunction parsePrimitive(t: IDL.Type, config: UI.ParseConfig, d: string) {\n  if (config.random && d === '') {\n    return t.accept(new Random(), d);\n  } else {\n    return t.accept(new Parse(), d);\n  }\n}\n\n/**\n *\n * @param t an IDL type\n * @returns an input for that type\n */\nexport function renderInput(t: IDL.Type): InputBox {\n  return t.accept(new Render(), null);\n}\n\ninterface ValueConfig {\n  input: InputBox;\n  value: any;\n}\n\n/**\n *\n * @param t an IDL Type\n * @param input an InputBox\n * @param value any\n * @returns rendering that value to the provided input\n */\nexport function renderValue(t: IDL.Type, input: InputBox, value: any) {\n  return t.accept(new RenderValue(), { input, value });\n}\n\nclass RenderValue extends IDL.Visitor<ValueConfig, void> {\n  public visitType<T>(t: IDL.Type<T>, d: ValueConfig) {\n    (d.input.ui.input as HTMLInputElement).value = t.valueToString(d.value);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public visitNull(t: IDL.NullClass, d: ValueConfig) {}\n  public visitText(t: IDL.TextClass, d: ValueConfig) {\n    (d.input.ui.input as HTMLInputElement).value = d.value;\n  }\n  public visitRec<T>(t: IDL.RecClass<T>, ty: IDL.ConstructType<T>, d: ValueConfig) {\n    renderValue(ty, d.input, d.value);\n  }\n  public visitOpt<T>(t: IDL.OptClass<T>, ty: IDL.Type<T>, d: ValueConfig) {\n    if (d.value.length === 0) {\n      return;\n    } else {\n      const form = d.input.ui.form!;\n      const open = form.ui.open as HTMLInputElement;\n      open.checked = true;\n      open.dispatchEvent(new Event(form.ui.event!));\n      renderValue(ty, form.form[0], d.value[0]);\n    }\n  }\n  public visitRecord(t: IDL.RecordClass, fields: Array<[string, IDL.Type]>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    fields.forEach(([key, type], i) => {\n      renderValue(type, form.form[i], d.value[key]);\n    });\n  }\n  public visitTuple<T extends any[]>(t: IDL.TupleClass<T>, components: IDL.Type[], d: ValueConfig) {\n    const form = d.input.ui.form!;\n    components.forEach((type, i) => {\n      renderValue(type, form.form[i], d.value[i]);\n    });\n  }\n  public visitVariant(t: IDL.VariantClass, fields: Array<[string, IDL.Type]>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    const selected = Object.entries(d.value)[0];\n    fields.forEach(([key, type], i) => {\n      if (key === selected[0]) {\n        const open = form.ui.open as HTMLSelectElement;\n        open.selectedIndex = i;\n        open.dispatchEvent(new Event(form.ui.event!));\n        renderValue(type, form.form[0], selected[1]);\n      }\n    });\n  }\n  public visitVec<T>(t: IDL.VecClass<T>, ty: IDL.Type<T>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    const len = d.value.length;\n    const open = form.ui.open as HTMLInputElement;\n    open.value = len;\n    open.dispatchEvent(new Event(form.ui.event!));\n    d.value.forEach((v: T, i: number) => {\n      renderValue(ty, form.form[i], v);\n    });\n  }\n}\n"]}